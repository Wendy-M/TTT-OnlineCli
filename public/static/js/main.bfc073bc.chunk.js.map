{"version":3,"sources":["components/Inscription/Inscription.js","components/Connexion/Connexion.js","components/Profil/Profil.js","assets/components/Footer/Footer.js","components/HomePageClient/HomePageClient.js","assets/components/Cards/Cards.js","components/ListeServeurs/ListeServeurs.js","assets/components/Navbar/Navbar.js","assets/components/CheckoutForm/CheckoutForm.js","components/Payment/Payment.js","assets/components/DailyMenu/DailyMenu.js","components/Menu/Menu.js","components/PasswordRenew/PasswordRenew.js","components/PasswordReset/PasswordReset.js","components/Payment/Commentaire.js","components/Historique/Historique.js","components/modifierSonProfil/modifierSonProfil.js","components/TipCommun/TipCommun.js","components/TipCommun/TipCommun1.js","components/MangoCards/MangoCards.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Inscription","props","change","event","setState","target","name","value","checkboxchange","checked","addNewRegister","e","preventDefault","state","cg","data","lastname","firstname","email","password","gender","age","adress","phone","headers","Headers","options","method","body","JSON","stringify","fetch","then","response","json","responseObject","message","success","alert","history","push","error","console","log","className","Container","Row","Col","xs","s","md","Form","Group","controlId","Control","type","placeholder","onChange","this","as","Check","label","Button","onClick","Component","Connexion","id","loginClient","token","userId","localStorage","setItem","lg","Label","Text","to","bind","Client","click","pathname","postDataClient","Authorization","getItem","clientInfo","client","object","deleteClient","window","confirm","signOut","clear","historique","variant","size","footer","deleteProfil","profil","Navbar","fixed","collapseOnSelect","expand","bg","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","eventKey","HomePageClient","CardSection","Liste","getDataServeurs","serveur","restaurantName","_id","saveIdRestaurant","display","tabServeur","map","element","index","fluid","serveurName","Image","src","serveurPicture","serveurMail","BarreMenu","connect","Dropdown","alignRight","Menu","Item","setLogin","stripePromise","loadStripe","CheckoutForm","app","a","stripe","redirectToCheckout","lineItems","price","quantity","mode","successUrl","cancelUrl","app1","app2","appChoice","amount","Number","Payment","Nocompte","DailyMenu","getDailyMenu","db","parse","db1","menu","dailyMenu","picture","err","Card","Body","Img","alt","PasswordRenew","handleInput","passwordRenew","match","params","onSubmit","PasswordReset","passwordReset","Commentaires","addNewStatut","prenom","nom","texte","serveurId","commentaires","class","Historique","montant","Date","date","toLocaleDateString","waiter","Table","striped","hover","modifierMonProfil","editClient","TipCommun","postInfoCard","TipCommun1","postToken","axios","url","CardRegistrationURL","qs","cardRegistrationId","Id","accessKeyRef","AccessKey","PreregistrationData","cardNumber","cardExpirationDate","cardCvx","result","resultat","payin","data1","walletID","registrationData","getWalletId","MangoCards","App","login","exact","path","render","component","Profil","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.bfc073bc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./inscription.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n/*import FormControl from \"react-bootstrap/FormControl\";*/\r\n\r\nclass Inscription extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lastname: null,\r\n      firstname: null,\r\n      email: null,\r\n      password: null,\r\n      gender: null,\r\n      age: null,\r\n      adress: null,\r\n      phone: null,\r\n      cg: false,\r\n    };\r\n  }\r\n  /* toggleChange = () => {\r\n    this.setState({\r\n      isChecked: !this.state.isChecked,\r\n    });\r\n  };*/\r\n  /*fonction pour ecrire dans nos input*/\r\n  change = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value, // identifier Id de l'input = choisir la valeur qui se trouve dans l'input\r\n    });\r\n  };\r\n\r\n  checkboxchange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.checked, // identifier Id de l'input = choisir la valeur qui se trouve dans l'input\r\n    });\r\n  };\r\n\r\n  addNewRegister = (e) => {\r\n    e.preventDefault();\r\n    if (!this.state.cg) {\r\n      this.setState({ message: \"Veuillez accepter les CGU-CGV. Merci.\" });\r\n      return;\r\n    }\r\n    const data = {\r\n      lastname: this.state.lastname,\r\n      firstname: this.state.firstname,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      gender: this.state.gender,\r\n      age: this.state.age,\r\n      adress: this.state.adress,\r\n      phone: this.state.phone,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/register\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n\r\n          if (responseObject.success === true) {\r\n            alert(\r\n              \"Votre inscription a bien été prise en compte. Vous pouvez désormais accéder à votre compte\"\r\n            );\r\n            this.props.history.push(\"/\");\r\n          } /* pour allez vers la page connexion une fois l'inscription done--success déclaré en back*/\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bigBlocClient\">\r\n        <Container className=\"blocprincipalClient \">\r\n         <Row className='creerInscr'>\r\n           \r\n            <Col className='colInscr' xs={12} s={12} md={7}>\r\n         \r\n            <h1 className=\"TitreInscription\">Créer mon compte </h1>\r\n            <p className=\"sous-titre\">\r\n              Merci de remplir les informations ci-dessous pour finaliser la\r\n              création de votre compte.\r\n            </p>\r\n            \r\n       \r\n           \r\n          <Form className=\"form1\">\r\n            <Form.Group controlId=\"lastname\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Nom\"\r\n                name=\"lastname\"\r\n                onChange={this.change}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"firstname\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Prénom\"\r\n                name=\"firstname\"\r\n                onChange={this.change}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Control\r\n                type=\"mail\"\r\n                placeholder=\"Email\"\r\n                name=\"email\"\r\n                onChange={this.change}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Mot de passe\"\r\n                name=\"password\"\r\n                onChange={this.change}\r\n              />\r\n            </Form.Group>\r\n        \r\n          <Form className=\"form2\">\r\n            <Form.Group controlId=\"gender\">\r\n              <Form.Control\r\n                as=\"select\"\r\n                type=\"text\"\r\n                name=\"gender\"\r\n                onChange={this.change}\r\n              >\r\n                <option>-</option>\r\n                <option>Femme</option>\r\n                <option>Homme</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"adress\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Ville\"\r\n                name=\"adress\"\r\n                onChange={this.change}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"phone\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Téléphone\"\r\n                name=\"phone\"\r\n                onChange={this.change}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"age\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Age\"\r\n                name=\"age\"\r\n                onChange={this.change}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n\r\n          <Form.Group controlId=\"formBasicCheckbox\">\r\n            <Form.Check\r\n              className=\"checkbox\"\r\n              type=\"checkbox\"\r\n              label=\"J'accepte les CGU et CGV.*\"\r\n              onChange={this.checkboxchange}\r\n              name=\"cg\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicCheckbox\">\r\n            <Form.Check\r\n              className=\"checkbox\"\r\n              type=\"checkbox\"\r\n              label=\"J'accepte que mes données soient utilisés à des fins commerciales.\"\r\n            />\r\n          </Form.Group>\r\n          </Form>\r\n          <Button\r\n            className=\"buttonInscri\"\r\n            type=\"submit\"\r\n            onClick={this.addNewRegister}\r\n          >\r\n            S'inscrire\r\n          </Button>\r\n         \r\n          <br />\r\n          <p>{this.state.message}</p>\r\n          </Col>\r\n          <Col className='backInscr' md={5}></Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Inscription;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport React, { Component } from \"react\";\r\nimport \"./connexion.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Connexion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { email: null, password: null };\r\n  }\r\n\r\n  change = (event) => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value, // identifier Id de l'input = choisir la valeur qui se trouve dans l'input\r\n    });\r\n  };\r\n\r\n  loginClient = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/login\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then(\r\n        (responseObject) => {\r\n          console.log('ok')\r\n          this.setState({ message: responseObject.message });\r\n          if (responseObject.token && responseObject.userId) {\r\n            /*stocker le token et l'userId dans le localStorage pour pouvoir les rappeler une fois la connection reussie */\r\n            localStorage.setItem(\"token\", responseObject.token);\r\n            localStorage.setItem(\"userID\", responseObject.userId);\r\n            /*permet d'allez vers la page profil APRES avoir valider la connexion (et pouvoir recuperer le localstorage aussi)*/\r\n            this.props.history.push(\"/ListeServeurs\");\r\n          }\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"connexion\">\r\n        <Row className=\"blocprincipalClient\">\r\n          <Col xs={12} s={12} md={6} lg={6} className='formConnexion'>\r\n          <Form className=\"formConnexion\">\r\n            <Form.Label className=\"text\">\r\n              Déjà membre? \r\n            </Form.Label>\r\n            <Form.Label className=\"text\">\r\n             Connectez-vous !\r\n            </Form.Label>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Control\r\n                name=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"Votre e-mail\"\r\n                id=\"email\"\r\n                onChange={this.change}\r\n                value={this.state.email}\r\n              />\r\n              <Form.Text className=\"text-muted\"></Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              className=\"passwordConnexion\"\r\n              controlId=\"formBasicPassword\"\r\n            >\r\n              <Form.Control\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"Mot de passe\"\r\n                id=\"password\"\r\n                onChange={this.change}\r\n                value={this.state.password}\r\n              />\r\n            </Form.Group>\r\n            \r\n            <Col className='colMdp' xs={12} md={9}>\r\n            <Link className=\"forgetpwd\" to=\"/passwordReset\">\r\n             \r\n                <p>Mot de passe oublié ?</p>\r\n           \r\n            </Link>\r\n            <p className='politique'>J'ai lu et j'accepte <Link>la politique de confidentialité.</Link></p>\r\n           \r\n            </Col>\r\n          \r\n           \r\n            <Col md={9} className='blocCompte'>\r\n            <Button \r\n              className=\"connectButton\"\r\n              \r\n              onClick={this.loginClient.bind(this)}\r\n            >\r\n              Se connecter\r\n            </Button>\r\n            <p>{this.state.message}</p>\r\n            <Form.Group>\r\n              <Form.Label className=\"text2\">Pas encore membre ?</Form.Label>\r\n            </Form.Group>\r\n            <Link className=\"creerCompte\" to=\"/Inscription\">\r\n              Créer mon compte\r\n            </Link>\r\n            </Col>\r\n          </Form>\r\n          \r\n          </Col>\r\n          <Col className='connexPic'></Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Connexion;\r\n","import React, { Component } from \"react\";\r\n//import Navbar from \"../../assets/components/Navbar/Navbar\";\r\n//import Historique from \"../Historique/Historique\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n//import Historique from \"../Historique/Historique\";\r\n\r\n/*style import*/\r\nimport \"./profil.css\";\r\n\r\nclass Client extends Component {\r\n  constructor(props) {\r\n    console.log();\r\n    super(props);\r\n    this.state = {\r\n      client: { historique: [] },\r\n    };\r\n  }\r\n  click = () => {\r\n    this.props.history.push({\r\n      pathname: \"/ListeServeurs\",\r\n    });\r\n  };\r\n\r\n\r\n  postDataClient = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute  pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n    const data = {\r\n      /*on appel l'userId dans le body en le recuperant du localstorage */\r\n      userId: localStorage.getItem(\"userId\"),\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/getDataClient\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const clientInfo = responseObject;\r\n          this.setState({ client: clientInfo, object: clientInfo });\r\n          console.log(this.state);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  componentDidMount() {\r\n    this.postDataClient();\r\n  }\r\n\r\n  deleteClient = (e) => {\r\n    window.confirm(\r\n      \"Etes-vous sur de vouloir supprimer votre compte? Cette action est irréversible.\"\r\n    );\r\n\r\n    e.preventDefault();\r\n    const data = {\r\n      userId: localStorage.getItem(\r\n        \"userID\"\r\n      ) /*on get l'Id qu'on a stocké durant la connexion*/,\r\n      /*userID avec le ID en majuscule car c'est comme ca qu'on l'a mis dans le local storage (/connexion) */\r\n      client: this.state.client,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n      /**\"Bearer Token\" est un JSON Web Token dont le rôle est d'indiquer que l'utilisateur \r\n       qui accède aux ressources est bien authentifié. */\r\n    });\r\n\r\n    const options = {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/delete\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n          alert(\r\n            \"La suppression de votre compte a bien été prise en compte. Merci.\"\r\n          );\r\n          this.props.history.push(\"/Home\");\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  signOut = () => {\r\n    localStorage.clear();\r\n    this.props.history.push(\"/Connexion\");\r\n  };\r\n  render() {\r\n    return (\r\n      <Container className=\"blocprincipalProfil \">\r\n        <Button\r\n          className=\"buttontip\"\r\n          variant=\"warning\"\r\n          size=\"sm\"\r\n          onClick={this.click}\r\n        >\r\n          POURBOIRE\r\n        </Button>\r\n        <Row>\r\n        <Col >\r\n        \r\n          <h1 className=\"Titre-profil\">Mon Profil Client</h1>\r\n        <div className=\"infoProfil\">\r\n              <p>\r\n                {this.state.client.firstname} {this.state.client.lastname}\r\n              </p>\r\n              <p className=\"profilPara\">\r\n                {this.state.client.adress} \r\n              </p>\r\n              <p className=\"profilPara\">\r\n                 {this.state.client.phone}\r\n              </p>\r\n            </div>\r\n            </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col s={12} xs={12} md={6}>\r\n        <Link to=\"/modifierMonProfil\" className=\"modif\">\r\n             <Button className=\"buttonedit\" type=\"submit\">\r\n                 Mettre à jour mon profil\r\n             </Button>\r\n         </Link>\r\n         </Col>\r\n         <Col s={12} xs={12} md={6}>\r\n         <Link to=\"/ListeServeurs\" className=\"modif\">\r\n             <Button className=\"buttonedit\" type=\"submit\">\r\n                 Donner un pourboire\r\n             </Button>\r\n         </Link>\r\n         </Col>\r\n        <Col s={12} xs={12} md={6}>\r\n         <Link to=\"/Historique\" className=\"modif\">\r\n             <Button className=\"buttonedit\" type=\"submit\">\r\n                 Historique de mes dons\r\n             </Button>\r\n         </Link>\r\n         </Col>\r\n         <Col s={12} xs={12} md={6}>\r\n        <div className=\"Titre\">\r\n          <Button\r\n            className=\"buttondeco\"\r\n            variant=\"outline-warning\"\r\n            type=\"submit\"\r\n            onClick={this.signOut}\r\n          >\r\n            Se déconnecter\r\n          </Button>\r\n        </div>\r\n        </Col>\r\n        <p>{this.state.message}</p>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Client;\r\n","import React, { Component } from \"react\";\r\nimport \"./Footer.css\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n  NavDropdown,\r\n} from \"react-bootstrap\";\r\nclass footer extends Component {\r\n  deleteProfil = (e) => {\r\n    window.confirm(\r\n      \"Etes-vous sur de vouloir supprimer votre compte? Cette action est irréversible.\"\r\n    );\r\n    e.preventDefault();\r\n    const data = {\r\n      userId: localStorage.getItem(\r\n        \"userID\"\r\n      ) /*on get l'Id qu'on a stocké durant la connexion*/,\r\n      /*userID avec le ID en majuscule car c'est comme ca qu'on l'a mis dans le local storage (/connexion) */\r\n      profil: this.state.profil,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/delete\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n          alert(\r\n            \"La suppression de votre compte a bien été prise en compte. Merci.\"\r\n          );\r\n          this.props.history.push(\"/connexion\");\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"footer\">\r\n        <Navbar fixed=\"bottom\" collapseOnSelect expand=\"lg\" bg=\"#edeaea\">\r\n          <Navbar.Brand href=\"#home\" className=\"textFooter\">\r\n            @Tipourboire\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link\r\n                href=\"cgu-cgv/CGV_TIPTOTHANK.pdf\"\r\n                className=\"textFooter\"\r\n              >\r\n                Condition Général\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                href=\"mailto:contact@tipourboire.com\"\r\n                className=\"textFooter\"\r\n              >\r\n                Contact\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                href=\"#pricing\"\r\n                className=\"textFooter\"\r\n                onClick={this.deleteProfil}\r\n              >\r\n                Supprimer mon compte\r\n              </Nav.Link>\r\n            </Nav>\r\n            <Nav>\r\n              <Nav.Link eventKey={2} href=\"#memes\" className=\"textFooter\">\r\n                A propos\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default footer;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./HomePageClient.css\";\r\n\r\nclass HomePageClient extends Component {\r\n  render() {\r\n    return (\r\n      <Container className=\"ContainerHome\">\r\n        <Row className=\"blocHome\">\r\n          <Col xs={12} md={6}>\r\n            <h1>Donner un Tip</h1>\r\n            <h2>Sans compte client</h2>\r\n            <p>Donner un pourboire sans créer de compte</p>\r\n            <Link to={\"/ListeServeurs\"}>\r\n              <Button className=\"rowButton\">Donner un pourboire</Button>\r\n            </Link>\r\n          </Col>\r\n          <Col xs={12} md={6}>\r\n            <h1>Donner un Tip</h1>\r\n            <h2>Avec compte client</h2>\r\n            <p>Me connecter à mon espace Tipourboire</p>\r\n            <Link to={\"/\"}>\r\n              <Button className=\"rowButton\">Donner un pourboire</Button>\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePageClient;\r\n","/**\r\n * Use the CSS tab above to style your Element's container.\r\n */\r\nimport React from \"react\";\r\nimport { CardElement } from \"@stripe/react-stripe-js\";\r\nimport \"./Cards.css\";\r\n\r\nconst CARD_ELEMENT_OPTIONS = {\r\n  style: {\r\n    base: {\r\n      color: \"#32325d\",\r\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n      fontSmoothing: \"antialiased\",\r\n      fontSize: \"16px\",\r\n      \"::placeholder\": {\r\n        color: \"#aab7c4\",\r\n      },\r\n    },\r\n    invalid: {\r\n      color: \"#fa755a\",\r\n      iconColor: \"#fa755a\",\r\n    },\r\n  },\r\n};\r\n\r\nfunction CardSection() {\r\n  return (\r\n    <label>\r\n      Card details\r\n      <CardElement options={CARD_ELEMENT_OPTIONS} />\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default CardSection;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col, Image, Button } from \"react-bootstrap\";\r\nimport Cards from \"../../assets/components/Cards/Cards\";\r\nimport \"./listeServeurs.css\";\r\n\r\nclass Liste extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { serveur: { tabServeur: [] } };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getDataServeurs();\r\n\r\n    console.log(\"localStorage.getItem()\");\r\n    console.log(localStorage.getItem(\"@idRestaurant\"));\r\n  }\r\n\r\n  getDataServeurs = (e) => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n      /*body: JSON.stringify(data),*/\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/getDataServeur\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (data) => {\r\n          console.log(data);\r\n          this.setState({ serveur: data });\r\n          localStorage.setItem(\"restaurantName\", data.restaurantName);\r\n          localStorage.setItem(\"@idRestaurant\", data._id);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  saveIdRestaurant = () => {};\r\n  display = () => {\r\n    return this.state.serveur.tabServeur.map((element, index) => {\r\n      return (\r\n        <Container fluid>\r\n          <Row className=\"rowTitre\">\r\n            <Col>\r\n              <h3>Donnez un tip à</h3>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"rowTitre2\">\r\n            <Col s={12}>\r\n              <h3>{element.serveurName}</h3>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"rowImage\">\r\n            <Col>\r\n              <Image src={\"https://back-end.osc-fr1.scalingo.io/\" + element.serveurPicture} />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"butTips\">\r\n            <Col>\r\n              <Button\r\n                onClick={() => {\r\n                  const headers = new Headers({\r\n                    \"Content-Type\": \"application/json\",\r\n                  });\r\n                  const data = {\r\n                    email: element.serveurMail,\r\n                  };\r\n                  const options = {\r\n                    method: \"POST\",\r\n                    headers: headers,\r\n                    body: JSON.stringify(data),\r\n                  };\r\n\r\n                  fetch(\"https://back-end.osc-fr1.scalingo.io/client/emailServeur\", options)\r\n                    .then((response) => {\r\n                      return response;\r\n                    })\r\n                    .then(\r\n                      (data) => {\r\n                        console.log(data);\r\n                      },\r\n\r\n                      (error) => {\r\n                        console.log(error);\r\n                      }\r\n                    );\r\n                  this.props.history.push({\r\n                    pathname: \"/Payment\",\r\n                  });\r\n                }}\r\n              >\r\n                Donner un Pourboire\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"blocPrincipalClient\">\r\n        <Row className=\"vousEtes\">\r\n          <Col className=\"colLieu\" s={12}>\r\n            <img src=\"/logoTTT/map.png\" />\r\n            <h1 className=\"Titre\">\r\n              Lieu : {this.state.serveur.restaurantName}\r\n            </h1>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          {\" \"}\r\n          <Col className=\"colButton\">\r\n            <Button\r\n              onClick={() => {\r\n                const headers = new Headers({\r\n                  \"Content-Type\": \"application/json\",\r\n                });\r\n                const data = {};\r\n                const options = {\r\n                  method: \"POST\",\r\n                  headers: headers,\r\n                  body: JSON.stringify(data),\r\n                };\r\n\r\n                fetch(\"https://back-end.osc-fr1.scalingo.io/client/emailServeur\", options)\r\n                  .then((response) => {\r\n                    return response;\r\n                  })\r\n                  .then(\r\n                    (data) => {\r\n                      console.log(data);\r\n                    },\r\n\r\n                    (error) => {\r\n                      console.log(error);\r\n                    }\r\n                  );\r\n                this.props.history.push({\r\n                  pathname: \"/TipCommun\",\r\n                });\r\n              }}\r\n            >\r\n              Donner à toute l'équipe !\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"display\">\r\n          <Col xs={12} s={12} md={4}>\r\n            {this.display()}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Liste;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Navbar.css\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Row,\r\n  Container,\r\n  Col,\r\n  Button,\r\n  NavLink,\r\n  DropdownButton,\r\n  Dropdown,\r\n} from \"react-bootstrap\";\r\n//import Deconnexion from \"../Deconnexion/Deconnexion\";\r\n\r\nclass BarreMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  connect = () => {\r\n    if (localStorage.getItem(\"token\") === null) {\r\n      return (\r\n        \r\n        <Dropdown className=\"nav justify-content-right\">\r\n        <Dropdown.Toggle alignRight variant=\"success\" id=\"dropdown-basic\">\r\n          <img src=\"/logoTTT/user.png\" />\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item href=\"/Connexion\">Connexion</Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n      );\r\n    } else {\r\n      return (\r\n        <Dropdown className=\"nav justify-content-right\">\r\n        <Dropdown.Toggle alignRight variant=\"success\" id=\"dropdown-basic\">\r\n          <img src=\"/logoTTT/user.png\" />\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item href=\"/Profil\">Mon profil</Dropdown.Item>\r\n          <Dropdown.Item onClick={() => {\r\n                    window.confirm(\"Voulez vous vous déconnecter ?\");\r\n                    localStorage.clear();\r\n                    this.props.setLogin(false);\r\n                    this.props.history.push(\"/\");\r\n                  }}\r\n                  href=\"/\" >Deconnexion</Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n      );\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.connect();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row className=\"partie1\">\r\n        \r\n          {this.connect()}\r\n          <Col className=\"logoPartie1\" md={12}>\r\n            <img src=\"/logoTTT/logoJaune.png\" />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default BarreMenu;\r\n","import React, { Component } from \"react\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nimport \"./checkoutForm.css\";\r\n\r\nconst stripePromise = loadStripe(\r\n  \"pk_test_51HAxRlHoh2Vgz5QdMpHXhINQMDhyGPR4gFvzs9vVzocySBI4WCfw8oPa7De6PC2ZJZlQKVQFRDPLU7FIGmXZC0QA00XGutN1eU\"\r\n);\r\n\r\nclass CheckoutForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      amount: 0,\r\n      client: {},\r\n    };\r\n  }\r\n  postDataClient = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute  pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n    const data = {\r\n      /*on appel l'userId dans le body en le recuperant du localstorage */\r\n      userId: localStorage.getItem(\"userId\"),\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/getDataClient\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const clientInfo = responseObject;\r\n          this.setState({ client: clientInfo, object: clientInfo });\r\n          console.log(this.state.client.email);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  app = async (event) => {\r\n    // When the customer clicks on the button, redirect them to Checkout.\r\n    const stripe = await stripePromise;\r\n    const { error } = await stripe.redirectToCheckout({\r\n      lineItems: [\r\n        {\r\n          price: \"price_1HlxlYHoh2Vgz5QdLB8yIwWQ\", // Replace with the ID of your price\r\n          quantity: 10,\r\n        },\r\n      ],\r\n\r\n      mode: \"payment\",\r\n      successUrl:\r\n        \"https://back-end.osc-fr1.scalingo.io/client/transfert?qte=\" +\r\n        10 +\r\n        \"&mail=\" +\r\n        this.state.client.email +\r\n        \"&RN=\" +\r\n        localStorage.getItem(\"restaurantName\"),\r\n      cancelUrl: \"http://localhost:3000/Payment\",\r\n    });\r\n    // If `redirectToCheckout` fails due to a browser or network\r\n    // error, display the localized error message to your customer\r\n    // using `error.message`.\r\n  };\r\n  app1 = async (event) => {\r\n    // When the customer clicks on the button, redirect them to Checkout.\r\n    const stripe = await stripePromise;\r\n    const { error } = await stripe.redirectToCheckout({\r\n      lineItems: [\r\n        {\r\n          price: \"price_1HlxlYHoh2Vgz5QdLB8yIwWQ\", // Replace with the ID of your price\r\n          quantity: 2,\r\n        },\r\n      ],\r\n      mode: \"payment\",\r\n\r\n      successUrl:\r\n        \"https://back-end.osc-fr1.scalingo.io/client/transfert?qte=\" +\r\n        2 +\r\n        \"&mail=\" +\r\n        this.state.client.email +\r\n        \"&RN=\" +\r\n        localStorage.getItem(\"restaurantName\"),\r\n      cancelUrl: \"http://localhost:3000/Payment\",\r\n    });\r\n    // If `redirectToCheckout` fails due to a browser or network\r\n    // error, display the localized error message to your customer\r\n    // using `error.message`.\r\n  };\r\n  app2 = async (event) => {\r\n    // When the customer clicks on the button, redirect them to Checkout.\r\n    const stripe = await stripePromise;\r\n    const { error } = await stripe.redirectToCheckout({\r\n      lineItems: [\r\n        {\r\n          price: \"price_1HlxlYHoh2Vgz5QdLB8yIwWQ\", // Replace with the ID of your price\r\n          quantity: 5,\r\n        },\r\n      ],\r\n\r\n      mode: \"payment\",\r\n      successUrl:\r\n        \"https://back-end.osc-fr1.scalingo.io/client/transfert?qte=\" +\r\n        5 +\r\n        \"&mail=\" +\r\n        this.state.client.email +\r\n        \"&RN=\" +\r\n        localStorage.getItem(\"restaurantName\"),\r\n      cancelUrl: \"http://localhost:3000/Payment\",\r\n    });\r\n    // If `redirectToCheckout` fails due to a browser or network\r\n    // error, display the localized error message to your customer\r\n    // using `error.message`.\r\n  };\r\n  appChoice = async (event) => {\r\n    if (this.state.amount <= 1) {\r\n      window.alert(\"Le montant minimum du tips doit être de 2 euros\");\r\n\r\n      return;\r\n    } else {\r\n      // When the customer clicks on the button, redirect them to Checkout.\r\n      const stripe = await stripePromise;\r\n      let amount = this.state.amount;\r\n      const { error } = await stripe.redirectToCheckout({\r\n        lineItems: [\r\n          {\r\n            price: \"price_1HlxlYHoh2Vgz5QdLB8yIwWQ\", // Replace with the ID of your price\r\n            quantity: Number(amount),\r\n          },\r\n        ],\r\n        mode: \"payment\",\r\n\r\n        successUrl:\r\n          \"https://back-end.osc-fr1.scalingo.io/client/transfert?qte=\" +\r\n          amount +\r\n          \"&mail=\" +\r\n          this.state.client.email +\r\n          \"&RN=\" +\r\n          localStorage.getItem(\"restaurantName\"),\r\n        cancelUrl: \"http://localhost:3000/Payment\",\r\n      });\r\n      // If `redirectToCheckout` fails due to a browser or network\r\n      // error, display the localized error message to your customer\r\n      // using `error.message`.\r\n    }\r\n  };\r\n  change = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.postDataClient();\r\n  }\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <div className=\"blocTips\">\r\n          <div className=\"allButton\">\r\n            <h1 className=\"titleTips\">Don Tipourboire</h1>\r\n            <Row className=\"RowPourboire\">\r\n              <Col>\r\n                <button className=\"tipButton1\" onClick={this.app1}>\r\n                  Donnez 2 euros\r\n                </button>\r\n              </Col>\r\n              <Col>\r\n                <button className=\"tipButton2\" onClick={this.app2}>\r\n                  Donnez 5 euros\r\n                </button>\r\n              </Col>\r\n              <Col>\r\n                <button className=\"tipButton3\" onClick={this.app}>\r\n                  Donnez 10 euros\r\n                </button>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <h1 className=\"amount\">Don libre</h1>\r\n          <Row>\r\n            <Col xs={12} s={12} md={12}>\r\n              <Form>\r\n                <Form.Group controlId=\"formGroupAmount\">\r\n                  <Form.Control\r\n                    name=\"amount\"\r\n                    type=\"number\"\r\n                    placeholder=\"Montant\"\r\n                    onChange={this.change}\r\n                    value={this.state.amount}\r\n                  />\r\n                </Form.Group>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n          <p className=\"amountMsg\">\r\n            (Veuillez saisir uniquement des chiffres entiers)\r\n          </p>\r\n          <Button\r\n            className=\"validAmount\"\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            onClick={this.appChoice}\r\n          >\r\n            Valider\r\n          </Button>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CheckoutForm;\r\n","import React, { Component } from \"react\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport CheckoutForm from \"../../assets/components/CheckoutForm/CheckoutForm\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst stripePromise = loadStripe(\r\n  \"pk_test_51HAxRlHoh2Vgz5QdMpHXhINQMDhyGPR4gFvzs9vVzocySBI4WCfw8oPa7De6PC2ZJZlQKVQFRDPLU7FIGmXZC0QA00XGutN1eU\"\r\n);\r\n\r\nclass Payment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { _id: \"\" };\r\n  }\r\n\r\n  Nocompte = () => {\r\n    return (\r\n      <Row>\r\n        <Col>\r\n          <p>Tipourboire ne collecte aucune information</p>\r\n          <p>\r\n            <Link to={\"https://stripe.com/payment-terms/legal\"}>\r\n              CGU Stripe\r\n            </Link>\r\n          </p>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    /* if (!this.props.serveurId) {\r\n      this.props.history.push(\"/home\");\r\n    }*/\r\n  }\r\n\r\n  componentDidMount() {\r\n    /* if (!this.props.serveurId) {\r\n      this.props.history.push(\"/home\");\r\n    }*/\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Elements stripe={stripePromise}>\r\n          <CheckoutForm />\r\n        </Elements>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Payment;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Button, Card,Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./DailyMenu.css\";\r\n\r\nclass DailyMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      db1: {},\r\n      menu: \"\",\r\n    };\r\n  }\r\n\r\n  getDailyMenu = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/menu/\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (data) => {\r\n          let db = JSON.parse(data)\r\n          this.setState({ db1: db })\r\n          this.setState({menu:this.state.db1.menu.dailyMenu.picture})\r\n          console.log(\"this.state.db1\")\r\n         \r\n          console.log(this.state.menu)\r\n        },   \r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getDailyMenu();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"blocprincipal\">\r\n        \r\n          \r\n        <Card>\r\n          <h2 className=\"Titre\">MENU DU JOUR</h2>\r\n          <Card.Body>\r\n            <p className=\"datemenu\"></p>\r\n          </Card.Body>\r\n          <Card.Img\r\n            variant=\"top\"\r\n            src={\"https://back-end.osc-fr1.scalingo.io/\" + this.state.menu}\r\n            className=\"dailyMenu\"\r\n            alt=\"Menu du Jour\"\r\n          />\r\n        \r\n         \r\n          \r\n        </Card>\r\n        <Row>\r\n           <Col md={12}>\r\n          <Link to=\"/Home\">\r\n            <Button className=\"button\" variant=\"outline-warning\" size=\"lg\">\r\n              POURBOIRE\r\n            </Button>\r\n          </Link>\r\n          </Col>\r\n          </Row>\r\n       \r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DailyMenu;\r\n","import React, { Component } from \"react\";\r\nimport DailyMenu from \"../../assets/components/DailyMenu/DailyMenu\";\r\n\r\nclass Menu extends Component {\r\n  render() {\r\n    return <DailyMenu />;\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n","/**\r\n * PasswordRenew.js - PasswordRenew component\r\n */\r\n\r\n/* Modules and components imports */\r\nimport React, { Component } from \"react\";\r\nimport \"./PasswordRenew.css\";\r\nimport { Row, Col, Container, Button } from \"react-bootstrap\";\r\n/* PasswordRenew component */\r\nclass PasswordRenew extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  passwordRenew = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!this.state.email || !this.state.password) {\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      token: this.props.match.params.token,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/password-renew\", options)\r\n      .then((response) => response.json())\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"renewPass\">\r\n        <Row>\r\n          <Col className=\"PassRenewCol\" md={12}>\r\n            <h1 className=\"newPass\"> Votre nouveau mot de passe</h1>\r\n            <form className=\"formRenew\" onSubmit={this.passwordRenew}>\r\n              <input\r\n                className=\"inputRenew\"\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                onChange={this.handleInput}\r\n                placeholder=\"Email\"\r\n              />\r\n\r\n              <br />\r\n\r\n              <input\r\n                className=\"inputRenew\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                onChange={this.handleInput}\r\n                placeholder=\"Nouveau mot de passe\"\r\n              />\r\n              <br />\r\n              <Button className=\"renewButton\">Valider</Button>\r\n            </form>\r\n\r\n            <p>{this.state.message}</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordRenew;\r\n","/**\r\n * PasswordReset.js - PasswordReset component\r\n */\r\n\r\n/* Modules and components imports */\r\nimport React, { Component } from \"react\";\r\nimport { Row, Col, Button, Container } from \"react-bootstrap\";\r\nimport \"./PasswordReset.css\";\r\n/* PasswordReset component */\r\nclass PasswordReset extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  passwordReset = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!this.state.email) {\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      email: this.state.email,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/password-reset\", options)\r\n      .then((response) => response.json())\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"passwordReset\">\r\n        <Row>\r\n          <Col className=\"PassResetCol\" md={12}>\r\n            <div className=\"PassResetDiv\">\r\n              <h1 className=\"taille\">Veuillez saisir votre mail </h1>\r\n              <h1 className=\"titrePass taille\">\r\n                pour réinitialiser votre mot de passe{\" \"}\r\n              </h1>\r\n              <form className=\"formReset\" onSubmit={this.passwordReset}>\r\n                <input\r\n                  className=\"inputReset\"\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  onChange={this.handleInput}\r\n                  placeholder=\"Email\"\r\n                />\r\n                <button className=\"resetButton\">Confirmer</button>\r\n              </form>\r\n            </div>\r\n          </Col>\r\n          <Col className=\"ButtonReset\" md={12}>\r\n            <p>{this.state.message}</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordReset;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport React, { Component } from \"react\";\r\nimport \"./Commentaire.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Commentaires extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {commentaires:[{nom:\"\", prenom:\"\", texte:\"\"}] };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  addNewStatut = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n        prenom:this.state.prenom,\r\n        nom:this.state.nom,\r\n        texte: this.state.texte,\r\n        id:this.props.serveurId\r\n\r\n      \r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n     \r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/commentaire\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n           \r\n          this.setState({ message: responseObject.message });\r\n         \r\n          this.props.history.push({\r\n            state: {\r\n              serveurId: this.props.id,\r\n            \r\n              \r\n            },\r\n            pathname:\"/menu\",\r\n           \r\n\r\n          });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <Container className='contCom'>\r\n        <Row className='coms'>\r\n          <Col xs={12} s={12} md={12}><h1 className='titreCom'>Laissez un commentaire à votre serveur</h1></Col>\r\n        </Row>\r\n            <Row className='coms'>\r\n            <Col xs={12} s={12} md={12}>\r\n            <Form.Group>\r\n         \r\n            <Form.Control\r\n              onChange={this.handleInput}\r\n              value={this.state.prenom}\r\n              name=\"prenom\"\r\n              type=\"text\"\r\n              placeholder=\"Prenom\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n           \r\n            <Form.Control\r\n              onChange={this.handleInput}\r\n              value={this.state.nom}\r\n              name=\"nom\"\r\n              type=\"text\"\r\n              placeholder=\"nom\"\r\n            />\r\n          </Form.Group>\r\n          <textarea\r\n            onChange={this.handleInput}\r\n            value={this.state.texte}\r\n            name=\"texte\"\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            placeholder=\"Que voulez-vous dire ?\"\r\n          ></textarea>\r\n          </Col>\r\n          \r\n          <Col>\r\n          <button\r\n            className=\"buttonStatut\"\r\n            type=\"submit\"\r\n            onClick={this.addNewStatut}\r\n          >\r\n            Publier\r\n          </button>\r\n          </Col>\r\n          <Col className='caract'>\r\n          <small>100 caractères maximum</small>\r\n          </Col>\r\n          </Row>\r\n        \r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Commentaires;","import React, { Component } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport \"./historique.css\";\r\n\r\nclass Historique extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      client : { historique : []} ,\r\n    };\r\n  }\r\n  postDataClient = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute  pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n    const data = {\r\n      /*on appel l'userId dans le body en le recuperant du localstorage */\r\n      userId: localStorage.getItem(\"userId\"),\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/getDataClient\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const clientInfo = responseObject;\r\n          this.setState({ client: clientInfo, object: clientInfo });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  display = () => {\r\n    return this.state.client.historique.map((element, index) => {\r\n      return (\r\n      \r\n          <tr>\r\n            <td type=\"text\" id=\"montant\" name=\"montant\">\r\n              {\" \"}\r\n              {element.montant / 100}€\r\n            </td>\r\n            <td type=\"date\" id=\"date\" name=\"date\">\r\n              {\" \"}\r\n              {new Date(element.date).toLocaleDateString()}\r\n            </td>\r\n            <td type=\"text\" id=\"waiter\" name=\"waiter\">\r\n              {\" \"}\r\n              {element.waiter}\r\n            </td>\r\n            <td type=\"text\" id=\"restaurantName\" name=\"restaurantName\">\r\n              {\" \"}\r\n              {element.restaurantName}\r\n            </td>\r\n          </tr>\r\n         \r\n      )\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.postDataClient();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className='histoClient'>\r\n        <Row>\r\n          <Col className='titleHisto'> <h3>Historique de vos pourboire</h3></Col>\r\n        </Row>\r\n       \r\n      <Row class=\"table-responsive\">\r\n        <Table striped hover>\r\n        <thead>\r\n      <tr>\r\n        <th>Montant</th>\r\n        <th>Date</th>\r\n        <th>Serveur</th>\r\n        <th>Restaurant</th>\r\n      </tr>\r\n      </thead>\r\n        <tbody>\r\n        {this.display()}\r\n        </tbody>\r\n      </Table>\r\n      </Row>\r\n        \r\n       \r\n      \r\n      </Container>\r\n    \r\n    );\r\n  }\r\n}\r\n\r\nexport default Historique\r\n","import React, { Component } from \"react\";\r\nimport \"./modifierSonProfil.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nclass modifierMonProfil extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      client: {},\r\n    };\r\n  }\r\n\r\n  change = (event) => {\r\n    let client = this.state.client;\r\n    client[event.target.name] = event.target.value;\r\n    this.setState({\r\n      client: client,\r\n      // identifier name de l'input = choisir la valeur qui se trouve dans l'input donc necessité d'avoir le bon name!!\r\n    });\r\n  };\r\n\r\n  postDataClient = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute  pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n    const data = {\r\n      /*on appel l'userId dans le body en le recuperant du localstorage */\r\n      userId: localStorage.getItem(\"userId\"),\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/getDataClient\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const clientInfo = responseObject;\r\n          this.setState({ client: clientInfo, object: clientInfo });\r\n          console.log(this.state);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  editClient = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      userId: localStorage.getItem(\r\n        \"userID\"\r\n      ) /*on get l'Id qu'on a stocké durant la connexion*/,\r\n      /*userID avec le ID en majuscule car c'est comme ca qu'on l'a mis dans le local storage (/connexion) */\r\n      client: this.state.client,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/edit\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  \r\n\r\n  componentDidMount() {\r\n    this.postDataClient();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bloc-modifierProfil\">\r\n        <Row>\r\n          <Col md={12} className=\"titreModif\">\r\n       \r\n          <h1>Modification du profil</h1>\r\n        \r\n        \r\n        <Form>\r\n          <Form.Group controlId=\"formGroupName\">\r\n            \r\n            <Form.Control\r\n              name=\"lastname\"\r\n              type=\"text\"\r\n              placeholder=\"Nom\"\r\n              onChange={this.change}\r\n              value={this.state.client.lastname}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGroupPrenom\">\r\n         \r\n            <Form.Control\r\n              name=\"firstname\"\r\n              type=\"text\"\r\n              placeholder=\"Prénom\"\r\n              onChange={this.change}\r\n              value={this.state.client.firstname}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formAdresse\">\r\n            \r\n            <Form.Control\r\n              as=\"select\"\r\n              type=\"text\"\r\n              placeholder=\"Sexe\"\r\n              name=\"gender\"\r\n              onChange={this.change}\r\n              value={this.state.client.gender}\r\n            >\r\n            <option>-</option>\r\n            <option>Femme</option>\r\n            <option>Homme</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formVille\">\r\n            \r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Ville\"\r\n              name=\"adress\"\r\n              onChange={this.change}\r\n              value={this.state.client.adress}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formTel\">\r\n            \r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Telephone(Facultatif)\"\r\n              name=\"phone\"\r\n              onChange={this.change}\r\n              value={this.state.client.phone}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formAge\">\r\n            \r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Age\"\r\n              name=\"age\"\r\n              onChange={this.change}\r\n              value={this.state.client.age}\r\n            />\r\n          </Form.Group>\r\n        </Form>\r\n        <Button\r\n          className=\"submitButton\"\r\n          variant=\"primary\"\r\n          type=\"submit\"\r\n          onClick={this.editClient}\r\n        >\r\n          Mettre à jour mon profil\r\n        </Button>\r\n        </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default modifierMonProfil;\r\n","import React, { Component } from \"react\";\r\n\r\nimport CheckoutForm from \"../../assets/components/CheckoutForm/CheckoutForm\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport \"./TipCommun.css\";\r\n\r\nclass TipCommun extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  postInfoCard = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n    const data = {\r\n      firstname: this.state.firstname,\r\n      lastname: this.state.lastname,\r\n      email: this.state.email,\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/TipUser\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        localStorage.setItem(\"@data\", JSON.stringify(data));\r\n      });\r\n    this.props.history.push(\"/TipCommun1\");\r\n  };\r\n  componentDidMount() {}\r\n  render() {\r\n    return (\r\n      <Container className=\"mainBlocCommun\">\r\n        <Row>\r\n          <Col className=\"blocCommun\"xs={12} s={12} md={12}>\r\n         \r\n        <p className=\"titleCommun\">\r\n          Information client\r\n        </p>\r\n        </Col>\r\n        <Col className=\"formCommun\" xs={12} s={12} md={12}>\r\n        <Form className=\"formCommun\">\r\n          <Form.Group className=\"formCommunGrp\" controlId=\"formGroupAmount\">\r\n            <Form.Control className=\"formMail\"\r\n              name=\"email\"\r\n              type=\"text\"\r\n              placeholder=\"E-Mail\"\r\n              onChange={this.handleInput}\r\n              value={this.state.email}\r\n            />\r\n            <Form.Control\r\n              name=\"lastname\"\r\n              type=\"text\"\r\n              placeholder=\"Nom\"\r\n              onChange={this.handleInput}\r\n              value={this.state.lastname}\r\n            />\r\n            <Form.Control\r\n              name=\"firstname\"\r\n              type=\"text\"\r\n              placeholder=\"Prénom\"\r\n              onChange={this.handleInput}\r\n              value={this.state.firstname}\r\n            />\r\n          </Form.Group>\r\n          </Form>\r\n          </Col>\r\n          <Col className=\"ButtonCol\" xs={12} s={12} md={12}>\r\n          <Button className=\"communButton\" onClick={this.postInfoCard}>\r\n            Continuer vers la page de paiement\r\n          </Button>\r\n          </Col>\r\n        \r\n      \r\n      </Row>\r\n      </Container>\r\n     \r\n    );\r\n  }\r\n}\r\n\r\nexport default TipCommun;\r\n","import React, { Component } from \"react\";\r\n\r\nimport CheckoutForm from \"../../assets/components/CheckoutForm/CheckoutForm\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport qs from \"qs\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./TipCommun1.css\";\r\nimport { Alert } from \"bootstrap\";\r\n\r\nclass TipCommun1 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { data: {}, resultat: {}, walletID: \"\" };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  postToken = () => {\r\n    if (this.state.amount <= 1) {\r\n      window.alert(\"Le montant minimum du tips doit être de 2 euros\");\r\n    } else {\r\n      axios({\r\n        method: \"post\",\r\n        url: this.state.data.CardRegistrationURL,\r\n        data: qs.stringify({\r\n          cardRegistrationId: this.state.data.Id,\r\n          accessKeyRef: this.state.data.AccessKey,\r\n          data: this.state.data.PreregistrationData,\r\n          cardNumber: this.state.cardNumber,\r\n          cardExpirationDate: this.state.cardExpirationDate,\r\n          cardCvx: this.state.cardCvx,\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        },\r\n      }).then((result) => {\r\n        this.setState({ resultat: result });\r\n\r\n        this.payin();\r\n      });\r\n    }\r\n  };\r\n  payin = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n    const data1 = {\r\n      walletID: this.state.walletID,\r\n      amount: this.state.amount,\r\n      cardRegistrationId: this.state.data.Id,\r\n      registrationData: this.state.resultat.data,\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data1),\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/payin\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((result) => {\r\n        this.setState({ walletID: result });\r\n        console.log(result);\r\n      });\r\n  };\r\n  getWalletId = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n    const data1 = {\r\n      _id: localStorage.getItem(\"@idRestaurant\"),\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data1),\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/client/getWalletId\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((result) => {\r\n        this.setState({ walletID: result });\r\n        console.log(result);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getWalletId();\r\n    console.log(\"JSON\");\r\n    this.setState({ data: JSON.parse(localStorage.getItem(\"@data\")) });\r\n    console.log(JSON.parse(localStorage.getItem(\"@data\")));\r\n  }\r\n  render() {\r\n    return (\r\n      <Container className=\"mainBlocCommun\">\r\n        <Row>\r\n          <Col className=\"blocCommun\" xs={12} s={12} md={12}>\r\n            <p className=\"titleCommun\">Paiement du pourboire</p>\r\n            <h5 className=\"tipsMin\">Le tips doit être de 2 euros minimum !</h5>\r\n          </Col>\r\n          <Col className=\"formCommun\" xs={12} s={12} md={12}>\r\n            <Form className=\"formCommun\">\r\n              <Form.Group className=\"formCommunGrp\" controlId=\"formGroupAmount\">\r\n                <Form.Control\r\n                  name=\"amount\"\r\n                  type=\"number\"\r\n                  placeholder=\"Montant du Don Général\"\r\n                  onChange={this.handleInput}\r\n                />\r\n                <Form.Control\r\n                  name=\"cardNumber\"\r\n                  type=\"text\"\r\n                  placeholder=\"Numéro de carte bleu\"\r\n                  onChange={this.handleInput}\r\n                />\r\n                <Form.Control\r\n                  name=\"cardExpirationDate\"\r\n                  type=\"text\"\r\n                  placeholder=\"Date d'expiration\"\r\n                  onChange={this.handleInput}\r\n                />\r\n                <Form.Control\r\n                  name=\"cardCvx\"\r\n                  type=\"text\"\r\n                  placeholder=\"CVX\"\r\n                  onChange={this.handleInput}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n          </Col>\r\n          <Col className=\"ButtonCol\" xs={12} s={12} md={12}>\r\n            <Button className=\"communButtonVal\" onClick={this.postToken}>\r\n              Payer\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TipCommun1;\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nclass MangoCards extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {}\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Form>\r\n          <Form.Group controlId=\"formGroupAmount\">\r\n            <Form.Control\r\n              name=\"email\"\r\n              type=\"text\"\r\n              placeholder=\"E-Mail\"\r\n              onChange={this.change}\r\n              value={this.state.amount}\r\n            />\r\n            <Form.Control\r\n              name=\"name\"\r\n              type=\"text\"\r\n              placeholder=\"Nom\"\r\n              onChange={this.change}\r\n              value={this.state.amount}\r\n            />\r\n            <Form.Control\r\n              name=\"firstname\"\r\n              type=\"text\"\r\n              placeholder=\"Prénom\"\r\n              onChange={this.change}\r\n              value={this.state.amount}\r\n            />\r\n            <Form.Control\r\n              name=\"birthday\"\r\n              type=\"date\"\r\n              placeholder=\"Date de naissance\"\r\n              onChange={this.change}\r\n              value={this.state.amount}\r\n            />\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MangoCards;\r\n","/**\r\n * App.js - Main app component\r\n */\r\n\r\n/*Module imports*/\r\nimport React, { Component } from \"react\";\r\nimport Inscription from \"../Inscription/Inscription\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Connexion from \"../Connexion/Connexion\";\r\nimport Profil from \"../Profil/Profil\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Footer from \"../../assets/components/Footer/Footer\";\r\nimport HomePageClient from \"../HomePageClient/HomePageClient\";\r\nimport Liste from \"../ListeServeurs/ListeServeurs\";\r\nimport BarreMenu from \"../../assets/components/Navbar/Navbar\";\r\nimport Payment from \"../Payment/Payment\";\r\nimport Menu from \"../Menu/Menu\";\r\nimport PasswordRenew from \"../PasswordRenew/PasswordRenew\";\r\nimport PasswordReset from \"../PasswordReset/PasswordReset\";\r\nimport Commentaires from \"../Payment/Commentaire\";\r\nimport Historique from \"../Historique/Historique\";\r\nimport modifierMonProfil from \"../modifierSonProfil/modifierSonProfil\";\r\nimport TipCommun from \"../TipCommun/TipCommun\";\r\nimport TipCommun1 from \"../TipCommun/TipCommun1\";\r\nimport MangoCards from \"../MangoCards/MangoCards\";\r\n\r\n// Make sure to call loadStripe outside of a component’s render to avoid\r\n// recreating the Stripe object on every render.\r\n// loadStripe is initialized with a fake API key.\r\n// Sign in to see examples pre-filled with your key.\r\n\r\n/*Main app component*/\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      login: false,\r\n    };\r\n  }\r\n  setLogin = (value) => {\r\n    this.setState({ login: value });\r\n  };\r\n  componentDidMount() {\r\n    if (localStorage.getItem(\"token\") !== null) {\r\n      this.setState({ login: true });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router>\r\n          <BarreMenu />\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={(props) => (\r\n                <Connexion setLogin={this.setLogin} {...props} />\r\n              )}\r\n            />\r\n            <Route path=\"/Inscription\" exact component={Inscription} />\r\n\r\n            <Route path=\"/Profil\" exact component={Profil} />\r\n            <Route path=\"/Home\" exact component={HomePageClient} />\r\n            <Route path=\"/ListeServeurs\" exact component={Liste} />\r\n            <Route path=\"/Payment\" exact component={Payment} />\r\n            <Route path=\"/menu\" exact component={Menu} />\r\n            <Route path=\"/Commentaires\" exact component={Commentaires} />\r\n            <Route path=\"/passwordReset\" exact component={PasswordReset} />\r\n            <Route path=\"/passwordRenew\" exact component={PasswordRenew} />\r\n            <Route path=\"/Historique\" exact component={Historique} />\r\n            <Route path=\"/TipCommun\" exact component={TipCommun} />\r\n            <Route path=\"/TipCommun1\" exact component={TipCommun1} />\r\n            <Route path=\"/MangoCards\" exact component={MangoCards} />\r\n            <Route\r\n              path=\"/modifierMonProfil\"\r\n              exact\r\n              component={modifierMonProfil}\r\n            />\r\n          </Switch>\r\n          <Footer />\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n/*import \"./index.css\";*/\r\nimport App from \"./components/App/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}